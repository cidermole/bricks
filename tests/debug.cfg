Experiment: {
  input: { in: "/tmp" }
  output: {
    # (a) wiring to child's output
    out: $parts.Brick2.output.out

    # (i) wiring to child's output list entry
    out2: $parts.Brick2.output.outs[0]
  }
  parts: {
    Brick1: {
      # (b) wiring to parent's input
      input: { in: $_._.input.in }
      # (f) plain output, no wiring
      output: { out }
    }

    Brick2: {
      input: {
        # (c) wiring to sibling's output
        in: $Brick1.output.out
        # (d) input list wiring to sibling's output
        ins: [ $Brick1.output.out ]
        # (g) input list wiring to parent's input
        inp: [ $_._._.input.in ]
      }
      output: {
        # (a) wiring to child's output
        out: $parts.Sub1.output.out
        # (e) output list wiring to child's output
        outs: [ $parts.Sub1.output.out ]
      }

      sequence: [
        { key }
      ]

      parts: {
        Sub1: {
          input: {
            # (b) wiring to parent's input
            in: $_._.input.in

            # (j) wiring to parent's input list entry
            in2: $_._.input.ins[0]

            # input list wiring to parent's input list entry
            # " to sibling's input list entry
            # ... millions of other combinations...
          }
          output: { out }
        }
      }
    }

    Brick3: {
      # (h) wiring to sibling's output list entry
      input: { in: $Brick2.output.outs[0] }
      output: { out }
    }
  }
}
