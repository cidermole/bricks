{#
 # This is actually the template of a shell script outputting moses.ini.
 #
 # Essentially just a workaround for creating an arbitrary template file.
 # We may want to implement a more general templating mechanism soon.
 #}
{% extends "brick.do.jinja" %}
{% block Work %}

# prepare symlinks: moses does not like gzipped input without .gz suffix
{% for phraseTable in brick.input.phraseTables -%}
ln -sf {{ loop.index0 }} input/phraseTables/{{ loop.index0 }}.gz
{% endfor %}
{%- for reorderingTable in brick.input.reorderingTables -%}
ln -sf {{ loop.index0 }} input/reorderingTables/{{ loop.index0 }}.gz
{% endfor %}

# for binary lexicalized reordering, moses requires the suffixed file, e.g.
# we have "input/binaryReorderingTables/0"
# we need "input/binaryReorderingTables/0.binlexr.idx" and friends
#
{% for reorderingTable in brick.input.binaryReorderingTables -%}
for suffix in binlexr.idx binlexr.srctree binlexr.tgtdata binlexr.voc0 binlexr.voc1; do
  basePrefix=$(readlink -f {{ reorderingTable }})
  ln -sf $basePrefix.$suffix input/binaryReorderingTables/{{ loop.index0 }}.$suffix
done
{% endfor %}

###################################################

cat <<EOF > output/mosesIni

#########################
### MOSES CONFIG FILE ###
#########################

# input factors
[input-factors]
0

# mapping steps
[mapping]
{# Below, we create "0 T 0" style lines, one for each phrasetable,
 # to score with either one of the tables (both tables do score for common phrases).
 # see http://www.statmt.org/moses/?n=Advanced.Models#ntoc7
 #
 # An alternative would be to use contrib/combine-ptables
-#}
{% for phraseTable in brick.input.phraseTables|list + brick.input.binaryPhraseTables|list -%}
{{ loop.index0 }} T {{ loop.index0 }}
{% endfor %}

[distortion-limit]
6

# feature functions
[feature]
UnknownWordPenalty
WordPenalty
PhrasePenalty
{% for phraseTable in brick.input.phraseTables -%}
PhraseDictionaryMemory name=TranslationModel{{ loop.index0 }} num-features={{ phraseTable.numPhraseFeatures }} path={{ phraseTable }}.gz input-factor=0 output-factor=0
{% endfor %}
{%- for phraseTable in brick.input.binaryPhraseTables -%}
{%- if phraseTable.dictionaryType == 'PhraseDictionaryOnDisk' -%}
PhraseDictionaryOnDisk name=DiskTranslationModel{{ loop.index0 }} num-features={{ phraseTable.numPhraseFeatures }} path={{ phraseTable }} input-factor=0 output-factor=0
{% elif phraseTable.dictionaryType == 'PhraseDictionaryCompact' -%}
PhraseDictionaryCompact name=DiskTranslationModel{{ loop.index0 }} num-features={{ phraseTable.numPhraseFeatures }} path={{ phraseTable }}/phrase-table.minphr input-factor=0 output-factor=0
{% endif -%}
{%- endfor %}
{%- for reorderingTable in brick.input.reorderingTables -%}
LexicalReordering name=LexicalReordering{{ loop.index0 }} num-features={{ reorderingTable.numReorderingFeatures }} type={{ reorderingTable.reorderingConfigSpec }}-allff input-factor=0 output-factor=0 path={{ reorderingTable }}.gz
{% endfor %}
{%- for reorderingTable in brick.input.binaryReorderingTables -%}
LexicalReordering name=BinLexicalReordering{{ loop.index0 }} num-features={{ reorderingTable.numReorderingFeatures }} type={{ reorderingTable.reorderingConfigSpec }}-allff input-factor=0 output-factor=0 path={{ reorderingTable }}/reordering
{% endfor %}
{%- for languageModel in brick.input.languageModels -%}
KENLM lazyken=0 name=LM{{ loop.index0 }} factor=0 path={{ languageModel }} order={{ languageModel.ngramOrder }}
{% endfor -%}
Distortion
{% block AdditionalFeatures %}{% endblock %}

# dense weights for feature functions
[weight]
# The default weights are NOT optimized for translation quality. You MUST tune the weights.
# Documentation for tuning is here: http://www.statmt.org/moses/?n=FactoredTraining.Tuning
UnknownWordPenalty0= 1
WordPenalty0= -1
PhrasePenalty0= 0.2
{% for phraseTable in brick.input.phraseTables -%}
TranslationModel{{ loop.index0 }}={% for i in range(phraseTable.numPhraseFeatures) %} 0.2{% endfor %}
{% endfor %}
{%- for phraseTable in brick.input.binaryPhraseTables -%}
DiskTranslationModel{{ loop.index0 }}={% for i in range(phraseTable.numPhraseFeatures) %} 0.2{% endfor %}
{% endfor %}
{%- for reorderingTable in brick.input.reorderingTables -%}
LexicalReordering{{ loop.index0 }}={% for i in range(reorderingTable.numReorderingFeatures) %} 0.3{% endfor %}
{% endfor %}
{%- for reorderingTable in brick.input.binaryReorderingTables -%}
BinLexicalReordering{{ loop.index0 }}={% for i in range(reorderingTable.numReorderingFeatures) %} 0.3{% endfor %}
{% endfor %}
{%- for languageModel in brick.input.languageModels -%}
LM{{ loop.index0 }}= 0.5
{% endfor -%}
Distortion0= 0.3
{% block AdditionalWeights %}{% endblock %}

EOF

{% endblock %}
