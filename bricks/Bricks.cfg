# General-purpose Bricks
# ======================
#
# You can freely extend these Bricks for your experiments.
#
# These should be general enough for usage across multiple different
# experimental setups.
#
# Create sensible groupings and include them here, e.g. Giza: @<Giza/Giza.cfg>

# below corpus stuff is demo only.

# Tokenizer
Tokenizer: {
  input:  { raw }
  output: { tokenized }
}

# Truecaser
Truecaser: {
  input:  { tokenized }
  output: { truecased }
}

# Preprocessor for raw corpus data, one sentence per line.
CorpusSidePreprocessor: {
  input:  { raw }
  #output: { truecased }
  output: { truecased: $parts.Truecaser0.output.truecased }

  parts: {
    # The names here will be inherited if a final experiment config
    # uses Bricks extending the CorpusSidePreprocessor.
    Tokenizer0: {
      extends: $Tokenizer

      # Since we should not refer to CorpusSidePreprocessor but to the final instance,
      # which is not known here yet, we must use relative paths.
      #
      # $_.key refers (explicitly) to a parent container's key.
      # Usually, container ancestors are walked to resolve such references implicitly
      # at the closest possible ancestor.
      # In this case, however, we want to avoid referring to ourselves.
      #
      input:   { raw: $_._.input.raw }
    }

    Truecaser0: {
      extends: $Truecaser
      input:   { tokenized: $Tokenizer0.output.tokenized }
    }
  }
}

# GIZA++ word aligner
Giza: @<Giza/Giza.cfg>

# Computes word translation probabilities
#
# creates text files with one lexical probability per line, in the
# formats: F2E: "%s %s %.7f\n" with $e, $f, P(e|f)
#          E2F: "%s %s %.7f\n" with $f, $e, P(f|e)
#
# see http://www.statmt.org/moses/?n=FactoredTraining.GetLexicalTranslationTable
#
LexicalTranslationModel: {
  # takes tokenized corpus sides and a word alignment file
  input:  { src, trg, alignment }
  output: { lexical_f2e, lexical_e2f }

  # from Experiment: paths for get-lexical.perl used in script
  MOSES: $_.MOSES

  template: """
    {{ brick.MOSES }}/scripts/training/get-lexical.perl input/src input/trg input/alignment output/lexical
    ln -sf lexical.f2e output/lexical_f2e
    ln -sf lexical.e2f output/lexical_e2f
  """
}

# Experiment setups specific to various machines
Setups: @<Setups/Setups.cfg>
