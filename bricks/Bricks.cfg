# General-purpose Bricks
# ======================
#
# You can freely extend these Bricks for your experiments.
#
# These should be general enough for usage across multiple different
# experimental setups.
#
# Create sensible groupings and include them here, e.g. Giza: @<Giza/Giza.cfg>

# below corpus stuff is demo only.

# Tokenizer
Tokenizer: {
  input:  { raw }
  output: { tokenized }
}

# Truecaser
Truecaser: {
  input:  { tokenized }
  output: { truecased }
}

# Preprocessor for raw corpus data, one sentence per line.
CorpusSidePreprocessor: {
  input:  { raw }
  #output: { truecased }
  output: { truecased: $parts.Truecaser0.output.truecased }

  parts: {
    # The names here will be inherited if a final experiment config
    # uses Bricks extending the CorpusSidePreprocessor.
    Tokenizer0: {
      extends: $Tokenizer

      # Since we should not refer to CorpusSidePreprocessor but to the final instance,
      # which is not known here yet, we must use relative paths.
      #
      # $_.key refers (explicitly) to a parent container's key.
      # Usually, container ancestors are walked to resolve such references implicitly
      # at the closest possible ancestor.
      # In this case, however, we want to avoid referring to ourselves.
      #
      input:   { raw: $_._.input.raw }
    }

    Truecaser0: {
      extends: $Truecaser
      input:   { tokenized: $Tokenizer0.output.tokenized }
    }
  }
}

# GIZA++ word aligner
Giza: @<Giza/Giza.cfg>

# Phrase-based translation models
Phrase: @<Phrase/Phrase.cfg>

# Experiment setups specific to various machines
Setups: @<Setups/Setups.cfg>
