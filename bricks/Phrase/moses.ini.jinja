{#
 # This is actually the template of a shell script outputting moses.ini.
 #
 # Essentially just a workaround for creating an arbitrary template file.
 # We may want to implement a more general templating mechanism soon.
 #}

cat <<EOF > output/mosesIni

#########################
### MOSES CONFIG FILE ###
#########################

# input factors
[input-factors]
0

# mapping steps
[mapping]
0 T 0

[distortion-limit]
6

# feature functions
[feature]
UnknownWordPenalty
WordPenalty
PhrasePenalty
{#- note: cannot actually iterate over phraseTables, as that would resolve keys, and that doesn't work yet from here. #}
{%- for i in range(brick.input.phraseTables|count) %}
PhraseDictionaryOnDisk name=TranslationModel{{ i }} num-features=4 path={{ brick.pwd() }}/input/phraseTables/{{ i }} input-factor=0 output-factor=0
{% endfor %}
{% for i in range(brick.input.reorderingTables|count) %}
{#- TODO: how to reference the type? -#}
# magicInput: {{ brick.magicInputBrick(brick.input.reorderingTables.data[0]).reorderingConfigSpec }}
# magicInput: {{ brick.input.reorderingTables.data[0].relativePath(brick)[:-2] }}
LexicalReordering name=LexicalReordering{{ i }} num-features=8 type=wbe-mslr-bidirectional-fe-allff input-factor=0 output-factor=0 path={{ brick.pwd() }}/input/reorderingTables/{{ i }}
{% endfor %}
{% for i in range(brick.input.languageModels|count) -%}
KENLM lazyken=0 name=LM{{ i }} factor=0 path={{ brick.pwd() }}/input/languageModels/{{ i }} order=3
{% endfor %}
Distortion

# dense weights for feature functions
[weight]
# The default weights are NOT optimized for translation quality. You MUST tune the weights.
# Documentation for tuning is here: http://www.statmt.org/moses/?n=FactoredTraining.Tuning
UnknownWordPenalty0= 1
WordPenalty0= -1
PhrasePenalty0= 0.2
TranslationModel0= 0.2 0.2 0.2 0.2
LexicalReordering0= 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3
Distortion0= 0.3
LM0= 0.5

EOF
