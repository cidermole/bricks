{#
 # This is actually the template of a shell script outputting moses.ini.
 #
 # Essentially just a workaround for creating an arbitrary template file.
 # We may want to implement a more general templating mechanism soon.
 #}

cat <<EOF > output/mosesIni

#########################
### MOSES CONFIG FILE ###
#########################

# input factors
[input-factors]
0

# mapping steps
[mapping]
0 T 0

[distortion-limit]
6

# feature functions
[feature]
UnknownWordPenalty
WordPenalty
PhrasePenalty
{# {% for phraseTable in brick.input.phraseTables %} #} {# does not work, cannot resolve refs from within refs #}
{% for phraseTable in range(brick.input.phraseTables|count) %}
{# note: phraseTable would be True if evaluated here, this is a shortcoming of the current way of recursively resolving keys. #}
PhraseDictionaryOnDisk name=TranslationModel{{ loop.index0 }} num-features=4 path={{ brick.pwd() }}/input/phraseTables/{{ loop.index0 }} input-factor=0 output-factor=0
{% endfor %}
LexicalReordering name=LexicalReordering0 num-features=8 type=wbe-mslr-bidirectional-fe-allff input-factor=0 output-factor=0 path=/home/david/mmt/ems/tm2small_ibm10k_ibm10k-ep/evaluation/test.filtered.1/ibm10k.reordering-table.1.wbe-mslr-bidirectional-fe
Distortion
KENLM lazyken=0 name=LM0 factor=0 path=/home/david/mmt/ems/tm2small_ibm10k_ibm10k-ep/evaluation/test.moses.table.ini.1 order=3

# dense weights for feature functions
[weight]
# The default weights are NOT optimized for translation quality. You MUST tune the weights.
# Documentation for tuning is here: http://www.statmt.org/moses/?n=FactoredTraining.Tuning
UnknownWordPenalty0= 1
WordPenalty0= -1
PhrasePenalty0= 0.2
TranslationModel0= 0.2 0.2 0.2 0.2
LexicalReordering0= 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3
Distortion0= 0.3
LM0= 0.5

EOF
