# Phrase-based translation model estimation
# =========================================
# Estimate a phrase table with scores from a parallel corpus and word alignment

# PhraseTable
# ------------
# Computes a gzipped phraseTable file. For details, see PhraseScorer in Estimate.cfg.
#
# Input a tokenized corpus with the casing you want the model and decoder
# to work with.
#
PhraseTable: {
  input:  { src, trg, alignment }
  # phraseTable, reorderingTable are gzipped
  output: {
    phraseTable: $parts.Scorer0.output.phraseTable
    reorderingTable: $parts.LexReordering0.output.reorderingTable
  }

  # this provides the canonical configuration that may be referenced.
  phraseTableConfig: {
    # since PhraseTable provides both, we need to distinguish them by name.
    numPhraseFeatures: $parts.Scorer0.numFeatures
    numReorderingFeatures: $parts.LexReordering0.numFeatures

    # for reference from moses.ini.jinja, fetch back the final reorderingConfigSpec
    # (which was actually built based on the reordering: config below)
    reorderingConfigSpec: $parts.LexReordering0.reorderingConfigSpec
  }

  # these are used from moses.ini via class TemplateBrick
  numPhraseFeatures: $phraseTableConfig.numPhraseFeatures
  numReorderingFeatures: $phraseTableConfig.numReorderingFeatures
  reorderingConfigSpec: $phraseTableConfig.reorderingConfigSpec

  reordering: {
    # see http://www.statmt.org/moses/?n=FactoredTraining.BuildReorderingModel
    type:   "wbe"            # word-based extraction
    orient: "mslr"           # monotone, swap, discontinuous-left, discontinuous-right
    dir:    "bidirectional"  # use both backward and forward models
    lang:   "fe"             # conditioned on both the source and target languages

    # bidirectional: *2, each orientation: *4 feature scores
    numFeatures: 2 * 4
  }

  parts: {
    Lex0: {
      extends: $LexicalScorer
      input: {
        src: $_._.input.src
        trg: $_._.input.trg
        alignment: $_._.input.alignment
      }
      # output: { lexical_f2e, lexical_e2f }
    }

    Extractor0: {
      extends: $Estimate.PhraseExtractor
      input: {
        src: $_._.input.src
        trg: $_._.input.trg
        alignment: $_._.input.alignment
      }
      # output: { sortedPhrases_f2e, sortedPhrases_e2f, sortedPhrasesReordering }

      type:   $reordering.type
      orient: $reordering.orient
    }

    Scorer0: {
      extends: $Estimate.PhraseScorer

      input: {
        sortedPhrases_f2e: $Extractor0.output.sortedPhrases_f2e
        sortedPhrases_e2f: $Extractor0.output.sortedPhrases_e2f
        lexical_f2e: $Lex0.output.lexical_f2e
        lexical_e2f: $Lex0.output.lexical_e2f
      }
      # phraseTable is gzipped
      # output: { phraseTable }
    }

    LexReordering0: {
      extends: $Estimate.LexicalReorderingScorer

      input:  { sortedPhrasesReordering: $Extractor0.output.sortedPhrasesReordering }
      # reorderingTable is gzipped
      # output: { reorderingTable }

      # see http://www.statmt.org/moses/?n=FactoredTraining.BuildReorderingModel
      type:   $reordering.type
      orient: $reordering.orient
      dir:    $reordering.dir
      lang:   $reordering.lang

      numFeatures: $reordering.numFeatures
    }
  }
}

# LexicalScorer
# -------------
# Computes word translation probabilities
#
# creates text files with one lexical probability per line, in the
# formats: srcTrg F2E: "%s %s %.7f\n" with $e, $f, P(e|f)
#          trgSrc E2F: "%s %s %.7f\n" with $f, $e, P(f|e)
#
# see http://www.statmt.org/moses/?n=FactoredTraining.GetLexicalTranslationTable
#
LexicalScorer: {
  # takes tokenized corpus sides and a word alignment file
  input:  { src, trg, alignment }
  output: { lexical_f2e, lexical_e2f }

  # from Experiment: paths for get-lexical.perl used in script
  MOSES: $_.MOSES

  template: """
    # prevent get-lexical.perl from "reusing" data
    rm -f output/lexical*

    {{ brick.MOSES }}/scripts/training/get-lexical.perl input/src input/trg input/alignment output/lexical
    ln -sf lexical.f2e output/lexical_f2e
    ln -sf lexical.e2f output/lexical_e2f
  """
}

# Phrase and lexicalized reordering table estimation
Estimate: @<Phrase/Estimate.cfg>

# Post-processing steps on phrase tables
Post: @<Phrase/Post.cfg>
