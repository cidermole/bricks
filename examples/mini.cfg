# include general Bricks that we will later use below.
Bricks: @<Bricks.cfg>

# Creates the word alignment of a truecased corpus.
# for now also tests PhraseTable.
Experiment: {
  # inherit machine-specific paths, ncpus, ...
  extends: $Bricks.Setups.Hopper

  input:  {
    truecasedSrc: $ibm10k_truecased + $sourceLang
    truecasedTrg: $ibm10k_truecased + $targetLang
  }
  output: {
    alignment: $parts.WordAligner0.output.alignment
    phraseTable: $parts.PhraseTable0.output.phraseTable
    reorderingTable: $parts.LexReord0.output.reorderingTable
    mosesIni: $parts.MosesIni0.output.mosesIni
  }
  
  # language pair
  sourceLang: en
  targetLang: it

  ibm10k_data: "/home/david/mmt/data/training/small/ibm"
  ibm10k_truecased: $ibm10k_data + "/train.clean."
  
  parts: {
    WordAligner0: {
      extends: $Bricks.Giza.WordAligner
      input: {
        src: $_._.input.truecasedSrc
        trg: $_._.input.truecasedTrg
      }
      # output: { alignment }
    }

    PhraseTable0: {
      extends: $Bricks.Phrase.PhraseTable
      input: {
        src: $_._.input.truecasedSrc
        trg: $_._.input.truecasedTrg
        alignment: $WordAligner0.output.alignment
      }
      # phraseTable is gzipped
      # output: { phraseTable }
    }

    LexReord0: {
      extends: $Bricks.Phrase.LexicalReorderingScorer
      input:  { sortedPhrasesReordering: $PhraseTable0.output.sortedPhrasesReordering }
      # reorderingTable is gzipped
      # output: { reorderingTable }
    }

    MosesIni0: {
      extends: $Bricks.Phrase.MosesIni
      input: {
        languageModels: []
        phraseTables: [ $PhraseTable0.output.phraseTable ]
        reorderingTables: []
      }
      # output: { mosesIni }
    }
  }
}
