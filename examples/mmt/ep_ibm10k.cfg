Bricks: @<Bricks.cfg>

MMTBaseline: @"baseline.cfg"

Experiment: {
  extends: $MMTBaseline.Experiment

  DESCRIPTION: """
    Baseline plain Moses: phrase-based model with lexicalized reordering.
    3-domain MMT data. Concatenated training corpus.
  """ + $corporaDescription

  input: {
    # we could really do with some nice syntax sugar for such loops, even outside loop Bricks. Maybe [$elems[$i] | i: [0..1]] ?
    # also, string joins would be nice (join a list of strings) - via Reference? $list = ["a", "b"] $ref=$list.join ? $list.join(" ") ? " ".join([])?
    trainSources: [$corpora_truecased_train[0] + $sourceLang, $corpora_truecased_train[1] + $sourceLang]
    trainTargets: [$corpora_truecased_train[0] + $targetLang, $corpora_truecased_train[1] + $targetLang]

    devSrc: $corpus_truecased_dev + $sourceLang
    devRef: $corpus_truecased_dev + $targetLang

    testSrc: $corpus_truecased_test + $sourceLang
    testRef: $corpus_truecased_test + $targetLang
  }

  corpora: {
    train: "ep+ibm10k"  # now only used for corporaDescription
    dev: "ep"
    test: "ep"
  }
  corpora_truecased_train: [
    $corpus_data + "/ep/train.clean."
    $corpus_data + "/ibm/train.clean."
  ]

  variant: "small"  # small|real

  # we now make this a list!
  # must have same length as trainSources, trainTargets
  nlinesTrain: [ALL, 10000]

  parts: {
    # inherit all parts, except for the override below.
    extends: $MMTBaseline.Experiment.parts

    # overrides $MMTBaseline.Experiment.parts.LimitTrain0
    LimitTrain0: {
      extends: $Bricks.Corpus.BitextConcat

      input:  {
        sources: $LimitTrainCorpora0.output.sources
        targets: $LimitTrainCorpora0.output.targets
      }
      # output: { src, trg }
    }

    LimitTrainCorpora0: {
      input:  {
        sources: $_._.input.trainSources
        targets: $_._.input.trainTargets
      }
      output: {
        sources: [$parts[$i].output.src]
        targets: [$parts[$i].output.trg]
      }

      i: [0..$nlinesTrain.length-1]

      parts: [{
        extends: $Bricks.Corpus.BitextHead

        input:  {
          src: $_._.input.sources[$i]
          trg: $_._.input.targets[$i]
        }
        # output: { src, trg }

        nlines: $nlinesTrain[$i]
      }]
    }
  }
}
