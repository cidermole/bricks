Bricks: @<Bricks.cfg>

MMTBaseline: @"baseline.cfg"

Experiment: {
  extends: $MMTBaseline.Experiment

  DESCRIPTION: """
    Baseline plain Moses: phrase-based model with lexicalized reordering.
    3-domain MMT data. Concatenated training corpus.
  """ + $corporaDescription

  input: {
    # inherit dev and test
    extends: $MMTBaseline.Experiment.input

    trainSources: [$corpus_truecased_train + $sourceLang]
    trainTargets: [$corpus_truecased_train + $targetLang]
  }

  variant: "small"  # small|real

  # we now make this a list!
  # must have same length as trainSources, trainTargets
  nlinesTrain: [ALL]

  parts: {
    # inherit all parts, except for the override below.
    extends: $MMTBaseline.Experiment.parts

    # overrides $MMTBaseline.Experiment.parts.LimitTrain0
    LimitTrain0: {
      extends: $Bricks.Corpus.BitextConcat

      input:  {
        sources: $LimitTrainCorpora0.output.sources
        targets: $LimitTrainCorpora0.output.targets
      }
      # output: { src, trg }
    }

    LimitTrainCorpora0: {
      input:  {
        sources: $_._.input.trainSources
        targets: $_._.input.trainTargets
      }
      output: {
        sources: [$parts[$i].output.src]
        targets: [$parts[$i].output.trg]
      }

      i: [0..$nlinesTrain.length-1]

      parts: [{
        extends: $Bricks.Corpus.BitextHead

        input:  {
          src: $_._.input.sources[$i]
          trg: $_._.input.targets[$i]
        }
        # output: { src, trg }

        nlines: $nlinesTrain[$i]
      }]
    }
  }
}
