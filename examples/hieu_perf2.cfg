# include general Bricks that we will later use below.
Bricks: @<Bricks.cfg>

# Builds a couple of moses decoders from sources.
Experiment: {
  # inherit machine-specific paths, ncpus, ...
  # implicitly resolved to $Bricks.Setups.<hostname_or_setup_arg>
  extends: $Setup

  input: {
    languageModelFile: "/home/david/models/mmt-euro.en-it/lm/ep.it.binlm"
    phraseTableFile: "/home/david/models/mmt-euro.en-it/filtered/phrase-table.0-0.1.1.gz"
    tunedMosesIni: "/home/david/models/mmt-euro.en-it/filtered/moses_nolex.ini"
    testSrc: "/home/david/models/mmt-euro.en-it/test.100.en"
  }
  output: {
    mosesBins: $parts.MosesBuilds0.output.mosesBins
    decodingTimes: $parts.MosesBuilds0.output.decodingTimes
    weightedMosesIni: $parts.InstantIni0.output.weightedMosesIni
  }

  parts: {
    # magic loop config pattern (detected by parts: [{}] syntax)
    ForeachMoses0: {
      input:  {
        testSrc: $_._.input.testSrc
        weightedMosesIni: $InstantIni0.output.weightedMosesIni
      }
      output: {
        mosesBins: [$parts[$i].output.mosesBin]
        decodingTimes: [$parts[$i].output.decodingTime]
      }

      mosesSrcRepo: "/home/david/mmt/mosesdecoder-perf2"
      mosesBranch: "kenlm-prefetch"

      mosesBinMap: {
        noprefetch: {
          revision: "9806d7a"
        }
        prefetch: {
          revision: "77b453a"
        }
        original: {
          revision: "a5da1a5"
        }
      }

      mosesBinVersions: [
        $mosesBinMap.noprefetch
        $mosesBinMap.prefetch
        $mosesBinMap.original
      ]

      i: [0..$mosesBinVersions.length-1]

      parts: [{
        # implicit scalar $i

        input: {
          testSrc: $_._.input.testSrc
          weightedMosesIni: $_._.input.weightedMosesIni
        }
        output: {
          mosesBin: $parts.BuildMoses0.output.mosesBin
          decodingTime: $parts.TestMoses0.output.decodingTime
        }

        parts: {
          BuildMoses0: {
            extends: $Bricks.Moses.BuildMoses

            # output: { mosesBin }

            # speed up the build
            target: "moses2"

            srcRepo:  $mosesSrcRepo
            revision: $mosesBinVersions[$i].revision
            branch:   $mosesBranch

            # (default values for reference) - some overridden above!
            # srcRepo:   "git@github.com:moses-smt/mosesdecoder.git"
            # revision:  "HEAD"
            # branch:    "master"
            # buildType: "Release"
            # target:    ""
          }

          TestMoses0: {
            extends: $Bricks.Moses.CustomProfiledDecoder
            input: {
              # mosesIni: $InstantIni0.output.weightedMosesIni
              # NO!

              mosesIni: $_._.input.weightedMosesIni

              src: $_._.input.testSrc
              # NOTE: in this particular case, we could syntactically
              # cross-reference 'src:' all the way up to Experiment,
              # since it's just a filename string. But for proper dependency
              # detection in general, we MUST reference our parent's input.

              mosesBin: $BuildMoses0.output.mosesBin
            }
            # output: { hyp, decodingTime }

            # prefetching is not yet multi-threaded
            ncpus: 1
          }
        }
      }]
    }

    InstantIni0: {
      extends: $Bricks.Moses.PhraseBasedIniFromModelFiles

      input: {
        languageModelFile: $_._.input.languageModelFile
        phraseTableFile: $_._.input.phraseTableFile
        tunedMosesIni: $_._.input.tunedMosesIni
      }
      # output: { weightedMosesIni }
    }
  }
}
