
# this may be included later.
# GeneralParts: @"GeneralParts.cfg"

GeneralParts: {
  #extends: {}
  
  ##parts: [
  
  # Sentence-aligned parallel corpus.
  ParallelCorpus: {
    ##name: ParallelCorpus
    #input:  {  }
    output: { en, it }
  }
  
  # Tokenizer
  Tokenizer: {
    input:  { raw }
    output: { tokenized }
  }
  
  # Preprocessor for raw corpus data, one sentence per line.
  CorpusSidePreprocessor: {
    input:  { raw }
    output: { truecased }
    
    parts: {
      Tokenizer0: {
        # TODO: uh-oh. naming how when instantiating this multiple times?
        # CorpusSidePreprocessor0_Tokenizer0
        #name:    Tokenizer0
        extends: $Tokenizer
        
        # Since we should not refer to CorpusSidePreprocessor but to the final instance,
        # which is not known here yet, we must use relative paths.
        #
        # $_.key refers (explicitly) to a parent container's key.
        # Usually, container parents are walked to resolve such references implicitly
        # at the closest possible parent.
        # In this case, however, we want to avoid referring to ourselves.
        #
        input:   { raw: $_._.input.raw }
        
        # NOTE: 'in' spec is redundant semantically here, as both are just a True value
        #
        # TODO: semantics
        #
        # The semantics of this is generally difficult, as the parent 'extends'
        # must be created first (lazy eval - OK), then its parts overridden,
        # and then evaluation should be on the child instance Prep0, not here.
      }
    
    # internal wiring? should be like wiring of an experiment.
    
    # specify the inputs, or outputs? I tend to do inputs.
    }
  }
  ##]
}

#######################################

experiment: {
  extends: {}
  
  # language pair
  inputExtension: en
  outputExtension: it
  
  parts: {
    ParallelCorpus0: {
      # Why not make ParallelCorpus0: { ... }, instead of
      # [ { name: ParallelCorpus0 } ] ?
      #
      # Because names are relative...? nah.
      
      #name:    ParallelCorpus0
      extends: $GeneralParts.ParallelCorpus
      #input:  {  }
      #output: { en, it }  # inherited
      
      # untokenized, sentence aligned files $raw.$inputExtension, $raw.$outputExtension
      raw: abc
    }
    
    Prep0: {
      #name:    Prep0
      extends: $GeneralParts.CorpusSidePreprocessor
      input:   { raw: "RAW.INPUT" }
    }
  }
}
